%MASKPARAMETERS Create a mask parameters panel

function p = MaskParameters
FA = guidata(gcf);
ph = 121; % panel height
pTitle = 'Mask Parameters';
pTag = 'MaskParameters';
% Panel and hide button
p = uipanel(gcf, 'Units', 'pixels', 'FontWeight', 'bold', ...
    'BorderType', 'line', 'HighlightColor', [0.5 0.5 0.5], ...
    'Visible', 'off', ...
    'Title', pTitle, ...
    'Tag', pTag, ...
    'Position', [0 0 230 ph]);
FA = guidata(gcf);
uicontrol(p, 'Style', 'pushbutton', 'String', '-', ...
    'HitTest', 'off', ...
    'Callback', @(h,ed) FA.hidePanel(pTag), ...
    'Position', [211 ph-30 18 16]);
% Panel components --------------------------------------------------------
% Mask size
uicontrol(p, 'Style', 'text', 'HorizontalAlignment', 'left', ...
    'String', 'Mask size:', ...
    'Position', [10 ph-38 100 14]);
uicontrol(p, 'Style', 'text', 'HorizontalAlignment', 'left', ...
    'String', 'pix', ...
    'Position', [188 ph-38 35 14]);
uicontrol(p, 'Style', 'edit', 'HorizontalAlignment', 'left', 'Enable', 'off', ...
    'BackgroundColor', [1 1 1], ...
    'Tag', 'e_maskSize', ...
    'String', FA.maskSize, ...
    'Callback', @MaskParameters_UInput, ...
    'Position', [135 ph-42 51 22]);
% Alpha
uicontrol(p, 'Style', 'text', 'HorizontalAlignment', 'left', ...
    'String', 'Alpha:', ...
    'Position', [10 ph-61 100 14]);
uicontrol(p, 'Style', 'edit', 'HorizontalAlignment', 'left', 'Enable', 'off', ...
    'BackgroundColor', [1 1 1], ...
    'Tag', 'e_maskAlpha', ...
    'String', FA.maskAlpha, ...
    'Callback', @MaskParameters_UInput, ...
    'Position', [135 ph-65 51 22]);
% Beta
uicontrol(p, 'Style', 'text', 'HorizontalAlignment', 'left', ...
    'String', 'Beta:', ...
    'Position', [10 ph-84 100 14]);
uicontrol(p, 'Style', 'edit', 'HorizontalAlignment', 'left', 'Enable', 'off', ...
    'BackgroundColor', [1 1 1], ...
    'Tag', 'e_maskBeta', ...
    'String', FA.maskBeta, ...
    'Callback', @MaskParameters_UInput, ...
    'Position', [135 ph-88 51 22]);
% Set mask for new fibers
uicontrol(p, 'Style', 'checkbox', 'Enable', 'off', ...
    'Value', FA.setMask, ...
    'String', 'Start with setting mask for new fibers', ...
    'Callback', @MaskParameters_setMask, ...
    'Position', [10 ph-111 205 20]);

function MaskParameters_UInput(hObject, eventdata)
FA = guidata(hObject);
val = sscanf(get(hObject, 'String'), '%f', 1);
switch get(hObject, 'Tag')
    case 'e_maskSize'
        if isempty(val)
            set(hObject, 'String', FA.maskSize);
            errordlg('Mask size must be a number', 'Error');
            return
        end
        FA.maskSize = val;
        
    case 'e_maskAlpha'
        if isempty(val)
            set(hObject, 'String', FA.maskAlpha);
            errordlg('Mask alpha must be a number', 'Error');
            return
        end
        FA.maskAlpha = val;
        
    case 'e_maskBeta'
        if isempty(val)
            set(hObject, 'String', FA.maskBeta);
            errordlg('Mask beta must be a number', 'Error');
            return
        end
        FA.maskBeta = val;
end

function MaskParameters_setMask(hObject, eventdata)
FA = guidata(hObject);
FA.setMask = ((get(hObject, 'Value') == get(hObject, 'Max')));
